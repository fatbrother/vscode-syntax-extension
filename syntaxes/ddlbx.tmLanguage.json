{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "DDLBX",
    "scopeName": "source.ddlbx",
    "patterns": [
        {
            "include": "#commet"
        },
        {
            "include": "#keyword_define"
        },
        {
            "include": "#parameter_define"
        },
        {
            "include": "#function_define"
        },
        {
            "include": "#object_define"
        },
        {
            "include": "#function_call"
        },
        {
            "include": "#object_call"
        }
    ],
    "repository": {
        "commet": {
            "patterns": [
                {
                    "match": "//.*$",
                    "name": "comment.line.double-slash"
                }
            ]
        },
        "keyword_define": {
            "patterns": [
                {
                    "match": "\\b(ret|opt|for|get)\\b",
                    "name": "keyword.control"
                },
                {
                    "match": "\\b(\\d+)\\b",
                    "name": "constant.numeric"
                },
                {
                    "match": "\\'(.*?)\\'",
                    "name": "string.quoted.single"
                },
                {
                    "match": "\\b(true|false)\\b",
                    "name": "constant.language"
                }
            ]
        },
        "parameter_define": {
            "patterns": [
                {
                    "match": "\\b(\\w+)\\s*:\\s*(\\w+)",
                    "captures": {
                        "1": {
                            "name": "variable.parameter"
                        },
                        "2": {
                            "name": "support.type"
                        }
                    }
                }
            ]
        },
        "function_define": {
            "begin": "\\b(fun)",
            "end": "\\:\\s*\\w+\\s*\\{",
            "beginCaptures": {
                "0": {
                    "name": "keyword.other"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.type"
                }
            },
            "patterns": [
                {
                    "match": "\\b(\\w+)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function"
                        }
                    }
                },
                {
                    "match": "\\b(\\w+)\\.",
                    "captures": {
                        "1": {
                            "name": "support.type"
                        }
                    }
                },
                {
                    "include": "#parameter_define"
                }
            ]
        }
    }
}