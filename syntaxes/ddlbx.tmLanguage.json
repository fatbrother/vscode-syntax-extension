{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "DDLBX",
  "scopeName": "source.ddlbx",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#variable_declaration"
    },
    {
      "include": "#type"
    },
    {
      "include": "#type_with_variable"
    },
    {
      "include": "#type_List"
    },
    {
      "include": "#string"
    },
    {
      "include": "#symbol"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "match": "//.*$",
          "name": "comment.line.double-slash.ddlbx"
        },
        {
          "begin": "/\\*",
          "end": "\\*/",
          "name": "comment.block.ddlbx"
        }
      ]
    },
    "digit": {
      "patterns": [
        {
          "match": "\\b[0-9]+\\b",
          "name": "constant.numeric.integer.ddlbx"
        }
      ]
    },
    "letter": {
      "patterns": [
        {
          "match": "\\b[a-zA-Z]+\\b",
          "name": "constant.character.ddlbx"
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "begin": "'",
          "end": "'",
          "name": "string.quoted.double.ddlbx",
          "patterns": [
            {
              "match": "\\\\(?:[\"\\\\/bfnrt]|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})",
              "name": "constant.character.escape.ddlbx"
            }
          ]
        }
      ]
    },
    "type": {
      "patterns": [
        {
          "match": "\\b(?:Int|Str|Flt|Boo|Reg)\\b",
          "name": "storage.type.ddlbx"
        }
      ]
    },
    "type_List": {
      "patterns": [
        {
          "match": "\\b(List)\\b",
          "name": "storage.type.list.ddlbx"
        },
        {
          "begin": "<",
          "end": ">",
          "name": "meta.type.ddlbx",
          "patterns": [
            {
              "include": "#type"
            },
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "match": "(?<!\\w)(?:[a-zA-Z_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))(?:[a-zA-Z0-9_]|(?:\\\\u[0-9a-fA-F]{4}|\\\\U[0-9a-fA-F]{8}))*(?!\\w)",
          "name": "variable.parameter.ddlbx"
        },
        {
          "match": ",",
          "name": "punctuation.cpp"
        }
      ]
    },
    "type_with_variable": {
      "patterns": [
        {
          "include": "#type",
          "patterns": [
            {
              "include": "#variable"
            }
          ]
        }
      ]
    },
    "variable_declaration": {
      "patterns": [
        {
          "match": "\\b(Int|Str|Flt|Boo|Reg|List)\\b\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": { "name": "storage.type.ddlbx" },
            "2": { "name": "variable.name.ddlbx" }
          }
        }
      ]
    }
  }
}
